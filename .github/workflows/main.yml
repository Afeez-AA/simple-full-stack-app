name: main.yml

on: 
  push:
    branches:
      - ci-cd

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }} 
      FRONTEND_IMAGE: ${{ secrets.DOCKER_USERNAME }}/simple-full-stack-app-frontend
      BACKEND_IMAGE: ${{ secrets.DOCKER_USERNAME }}/simple-full-stack-app-backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker build
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        run: echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin

      - name: Determine next version tag
        id: version
        run: |
          latest_tag=$(curl -s -H "Accept: application/vnd.docker.distribution.manifest.v2+json" \
            "https://hub.docker.com/v2/repositories/${{ env.DOCKER_USERNAME }}/simple-full-stack-app-backend/tags" | jq -r '.results[0].name')
          
          version_regex="v([0-9]+)\.([0-9]+)\.([0-9]+)"
          if [[ $latest_tag =~ $version_regex ]]; then
            major="${BASH_REMATCH[1]}"
            minor="${BASH_REMATCH[2]}"
            patch=$((BASH_REMATCH[3] + 1))
            new_tag="v${major}.${minor}.${patch}"
          else
            new_tag="v1.0.0"
          fi
          
          echo "New version tag is $new_tag"
          echo "TAG=$new_tag" >> $GITHUB_ENV

      - name: Build and push backend image
        run: |
          docker build -t $BACKEND_IMAGE:${{ env.TAG }} -f backend/Dockerfile ./backend
          docker push $BACKEND_IMAGE:${{ env.TAG }}

      - name: Build and push frontend image
        run: |
          docker build -t $FRONTEND_IMAGE:${{ env.TAG }} -f frontend/Dockerfile ./frontend
          docker push $FRONTEND_IMAGE:${{ env.TAG }}

      - name: Update TAG in docker-compose.yml
        run: |
          sed -i "s/\${TAG}/${{ env.TAG }}/g" docker-compose.yml

      - name: Deploy application with Docker Compose
        run: |
          docker-compose -f docker-compose.yml up -d
