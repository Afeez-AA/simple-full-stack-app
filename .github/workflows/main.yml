name: CI-CD Pipeline

on:
  push:
    branches:
      - ci-cd 

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      FRONTEND_IMAGE: ${{ secrets.DOCKER_USERNAME }}/simple-full-stack-app-frontend
      BACKEND_IMAGE: ${{ secrets.DOCKER_USERNAME }}/simple-full-stack-app-backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Determine new version tag
        id: new_version
        uses: actions/checkout@v3

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Build and push backend Docker image
        run: |
          docker build -t $BACKEND_IMAGE:${{ steps.create_release.outputs.tag_name }} -f backend/Dockerfile ./backend
          docker push $BACKEND_IMAGE:${{ steps.create_release.outputs.tag_name }}

      - name: Build and push frontend Docker image
        run: |
          docker build -t $FRONTEND_IMAGE:${{ steps.create_release.outputs.tag_name }} -f frontend/Dockerfile ./frontend
          docker push $FRONTEND_IMAGE:${{ steps.create_release.outputs.tag_name }}

      - name: Deploy with Docker Compose
        run: |
          docker-compose -f docker-compose.yml up -d
